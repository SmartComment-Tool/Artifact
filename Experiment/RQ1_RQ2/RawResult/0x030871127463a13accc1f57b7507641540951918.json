[
  {
    "contract": "MikuInu",
    "function": "_getValues",
    "explanation": "Return statement includes _localVal[10] which is not described in comments, missing rTax/tTAx in return values.",
    "contract_code": "\n=== Implementation of Function _getValues(uint256) ===\nfunction _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256,uint256,uint256,uint256) {\r\n        uint256[12] memory _localVal;\r\n        (_localVal[0]/**tTransferAmount*/, _localVal[1]  /**tFee*/, _localVal[2] /**tBurnValue*/,_localVal[8]/*tTAx*/) = _getTValues(tAmount);\r\n        _localVal[3] /**currentRate*/ =  _getRate();\r\n        ( _localVal[4] /**rAmount*/,  _localVal[5] /**rTransferAmount*/, _localVal[6] /**rFee*/, _localVal[7] /**rBurnValue*/,_localVal[9]/*rTax*/) = _getRValues(tAmount, _localVal[1], _localVal[3], _localVal[2],_localVal[8]);\r\n        return (_localVal[4], _localVal[5], _localVal[6], _localVal[0], _localVal[1], _localVal[2],_localVal[8],_localVal[10]);\r\n    }\n    \n=== Functions that function _getValues internally calls ===\nfunction _getRValues(uint256 tAmount, uint256 tFee, uint256 currentRate, uint256 tBurnValue,uint256 tTax) private pure returns (uint256, uint256, uint256,uint256,uint256) {\r\n        uint256 rAmount = tAmount.mul(currentRate);\r\n        uint256 rFee = tFee.mul(currentRate);\r\n        uint256 rBurnValue = tBurnValue.mul(currentRate);\r\n        uint256 rTax = tTax.mul(currentRate);\r\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rBurnValue).sub(rTax);\r\n        return (rAmount, rTransferAmount, rFee, rBurnValue,rTax);\r\n    }\nfunction _getRate() private view returns(uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply.div(tSupply);\r\n    }\nfunction _getTValues(uint256 tAmount) private pure returns (uint256, uint256, uint256,uint256) {\r\n        uint256[5] memory _localVal;\r\n        \r\n        _localVal[0]/**tTax*/ = tAmount.div(100).mul(5);\r\n        _localVal[1]/**tBurnValue*/ = tAmount.div(100).mul(3);\r\n        _localVal[2]/**tFee*/ = tAmount.div(100).mul(2);\r\n        _localVal[4]/**tTransferAmount*/ = tAmount.sub(_localVal[2]).sub(_localVal[1]).sub(_localVal[0]);\r\n        return (_localVal[4], _localVal[2], _localVal[1],_localVal[0]);\r\n    }",
    "rewritten_code": {
      "_getValues": "function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256,uint256,uint256,uint256) {\n        uint256[12] memory _localVal;\n        (_localVal[0], _localVal[1], _localVal[2], _localVal[8]) = _getTValues(tAmount);\n        _localVal[3] = _getRate();\n        ( _localVal[4], _localVal[5], _localVal[6], _localVal[7], _localVal[9]) = _getRValues(tAmount, _localVal[1], _localVal[3], _localVal[2], _localVal[8]);\n        return (_localVal[4], _localVal[5], _localVal[6], _localVal[0], _localVal[1], _localVal[2], _localVal[8], _localVal[9]);\n    }"
    }
  }
]